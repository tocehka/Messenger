worker_processes auto;

events { 
    use epoll;
    worker_connections 1024;
    multi_accept on;
}
http {

    include  /etc/nginx/mime.types;

    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;

    upstream _back {
        server backend:8000;
    }

     server {

        listen 80;
        # listen 443 ssl http2;
        server_name back.past-tech.ru;

        # if ($ssl_protocol = "") {
        #     rewrite ^ https://$host$request_uri? permanent;
        # }

        keepalive_timeout   60;
    
        # include  /etc/nginx/ssl-options.conf;
        # ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # ssl_certificate ${CERT_PATH};
        # ssl_certificate_key ${KEY_PATH};

        client_max_body_size  1m;
        client_body_timeout 10;
        reset_timedout_connection on;
        send_timeout 2;
        sendfile on;
        tcp_nodelay on;
        tcp_nopush on;

        gzip on;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/javascript application/javascript;

        open_file_cache max=200000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_pass http://_back;
        }

        location /socket.io {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_redirect off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_cache_bypass $http_upgrade;
            proxy_pass http://_back/socket.io;
        }
    }

    server {

        listen 80;
        server_name messenger.past-tech.ru;

        client_max_body_size  1m;
        client_body_timeout 10;
        reset_timedout_connection on;
        send_timeout 2;
        sendfile on;
        tcp_nodelay on;
        tcp_nopush on;

        gzip on;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/javascript application/javascript;

        open_file_cache max=200000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;

        location / {
            root   /var/www/mess_front;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}